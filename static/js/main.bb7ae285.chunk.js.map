{"version":3,"sources":["components/Fullpage.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","TitleSection","data","title","subtitle","Object","keys","links","map","key","url","AboutSection","sections","items","content","SkillCard","skill","src","image","alt","SkillSection","App","to","smooth","offset","duration","name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sqDAGqBA,G,uLAGP,IACHC,EAAYC,KAAKC,MAAjBF,SACH,OACI,yBAAKG,UAAS,mBAAcF,KAAKC,MAAMC,WAAa,KAC/CH,O,GAPqBI,c,OCKjBC,G,uLAEb,OACI,kBAAC,EAAD,CAAUF,UAAU,OAChB,6BACI,wBAAIA,UAAU,SACTG,EAAKC,OAEV,6BACI,wBAAIJ,UAAU,cACTG,EAAKE,UAEV,yBAAKL,UAAU,eAEPM,OAAOC,KAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GACxB,OACI,kBAAC,aAAD,CAAYV,UAAU,aAAaW,IAAKR,EAAKK,MAAME,gB,GAhBjDT,cCArBW,G,uLAEb,OACI,kBAAC,EAAD,CAAUZ,UAAU,QAChB,wBAAIA,UAAU,SACTG,EAAKU,SAAS,GAAGT,OAEtB,yBAAKJ,UAAU,4BAEPM,OAAOC,KAAKJ,EAAKU,SAAS,GAAGC,MAAM,GAAGC,SAASN,KAAI,SAAAC,GAC/C,OACI,2BAAIP,EAAKU,SAAS,GAAGC,MAAM,GAAGC,QAAQL,a,GAX5BT,cCLrBe,E,iLACP,IACEC,EAAUnB,KAAKC,MAAfkB,MACR,OACI,yBAAKjB,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKkB,IAAKf,EAAKU,SAAS,GAAGC,MAAMG,GAAOF,QAAQI,MAAOC,IAAKjB,EAAKU,SAAS,GAAGC,MAAMG,GAAOF,QAAQX,SAEtG,wBAAIJ,UAAU,YACTG,EAAKU,SAAS,GAAGC,MAAMG,GAAOF,QAAQX,Y,GATpBH,aCKlBoB,G,uLAEb,OACI,kBAAC,EAAD,CAAUrB,UAAU,OAChB,wBAAIA,UAAU,SACTG,EAAKU,SAAS,GAAGT,OAEtB,yBAAKJ,UAAU,mBAEPM,OAAOC,KAAKJ,EAAKU,SAAS,GAAGC,OAAOL,KAAI,SAAAQ,GACpC,OACI,kBAAC,EAAD,CAAWA,MAAOA,a,GAXRhB,c,YCoC3BqB,MAlCf,WACI,OACI,yBAAKtB,UAAU,OACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACP,kBAAC,OAAD,CAAMA,UAAU,WAAWuB,GAAG,QAAQC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,KAA1E,SAGA,kBAAC,OAAD,CAAM1B,UAAU,WAAWuB,GAAG,QAAQC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,KAA1E,YAMZ,kBAAC,EAAD,MACA,yBAAK1B,UAAU,YACX,kBAAC,UAAD,CAAS2B,KAAK,QAAQ3B,UAAU,YAChC,kBAAC,OAAD,CAAMuB,GAAG,QAAQC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,KACjD,yBAAKR,IAAI,gEAGjB,kBAAC,EAAD,MACA,yBAAKlB,UAAU,YACX,kBAAC,UAAD,CAAS2B,KAAK,QAAQ3B,UAAU,YAChC,kBAAC,OAAD,CAAMuB,GAAG,QAAQC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,KACjD,yBAAKR,IAAI,gEAGjB,kBAAC,EAAD,QC1BQU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bb7ae285.chunk.js","sourcesContent":["import React , { Component } from \"react\";\r\nimport \"../styles/fullpage.css\"\r\n\r\nexport default class Fullpage extends Component {\r\n\r\n\r\n    render() {\r\n    const {children} = this.props;\r\n        return(\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React , { Component } from \"react\";\r\nimport data from \"../data\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nimport \"../styles/TitleSection.css\";\r\n\r\nexport default class TitleSection extends Component{\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"red\">\r\n                <div>\r\n                    <h1 className=\"title\">\r\n                        {data.title}\r\n                    </h1>\r\n                    <div>\r\n                        <h2 className=\"skillTitle\">\r\n                            {data.subtitle}\r\n                        </h2>\r\n                        <div className=\"socialLinks\">\r\n                            {\r\n                                Object.keys(data.links).map(key => {\r\n                                    return (\r\n                                        <SocialIcon className=\"socialIcon\" url={data.links[key]} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fullpage>\r\n        )\r\n    }\r\n}","import React , { Component } from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data\";\r\n\r\nimport \"../styles/AboutSection.css\"\r\nimport {Link} from \"react-scroll\";\r\n\r\nexport default class AboutSection extends Component{\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"blue\">\r\n                <h1 className=\"title\">\r\n                    {data.sections[0].title}\r\n                </h1>\r\n                <div className=\"sectionContent container\">\r\n                    {\r\n                        Object.keys(data.sections[0].items[0].content).map(key => {\r\n                            return(\r\n                                <p>{data.sections[0].items[0].content[key]}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}","import React , { Component } from \"react\";\r\nimport data from \"../data\";\r\n\r\nexport default class SkillCard extends Component{\r\n    render() {\r\n        const { skill } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"imgCard\">\r\n                    <img src={data.sections[1].items[skill].content.image} alt={data.sections[1].items[skill].content.title} />\r\n                </div>\r\n                <h5 className=\"cardName\">\r\n                    {data.sections[1].items[skill].content.title}\r\n                </h5>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data\";\r\n\r\nimport \"../styles/SkillSection.css\";\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"red\">\r\n                <h1 className=\"title\">\r\n                    {data.sections[1].title}\r\n                </h1>\r\n                <div className=\"cards container\">\r\n                    {\r\n                        Object.keys(data.sections[1].items).map(skill => {\r\n                            return (\r\n                                <SkillCard skill={skill} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n}","import React from 'react';\n\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\n\nimport './styles/App.css';\nimport './styles/Navigation.css'\nimport {Element, Link} from \"react-scroll\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"navigation\">\n                <div className=\"right\">\n                        <Link className=\"navItems\" to=\"test1\" smooth={true} offset={50} duration={500}>\n                            About\n                        </Link>\n                        <Link className=\"navItems\" to=\"skill\" smooth={true} offset={50} duration={500}>\n                            Skills\n                        </Link>\n                </div>\n            </div>\n\n            <TitleSection />\n            <div className=\"downIcon\">\n                <Element name=\"test1\" className=\"element\"/>\n                <Link to=\"test1\" smooth={true} offset={50} duration={500}>\n                    <img src=\"https://img.icons8.com/ios-glyphs/30/000000/sort-down.png\"/>\n                </Link>\n            </div>\n            <AboutSection/>\n            <div className=\"downIcon\">\n                <Element name=\"skill\" className=\"element\"/>\n                <Link to=\"skill\" smooth={true} offset={50} duration={500}>\n                    <img src=\"https://img.icons8.com/ios-glyphs/30/000000/sort-down.png\"/>\n                </Link>\n            </div>\n            <SkillSection/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}